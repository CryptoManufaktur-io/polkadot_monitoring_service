version: '3.4'

services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
      - prometheus_rules:/etc/prometheus/rules/
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--web.enable-lifecycle'
    - '--web.console.libraries=/usr/share/prometheus/console_libraries'
    - '--web.console.templates=/usr/share/prometheus/consoles'
    
    ports:
    - 9090:9090
    networks:
    - exporters
    - monitoring
    - bot

  grafana:
    image: grafana/grafana:latest
    user: "472"
    depends_on:
    - prometheus
    ports:
    - 3000:3000
    volumes:
    - grafana_data:/var/lib/grafana
    - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
    - 'GF_SECURITY_ADMIN_PASSWORD=admin'
    - 'GF_USERS_ALLOW_SIGN_UP=false'
    networks:
    - monitoring

  alertmanager:
    image: prom/alertmanager:latest
    ports:
    - 9093:9093
    volumes:
    - ./alertmanager:/config
    - alertmanager-data:/data
    command: --config.file=/config/alertmanager.yml 
    networks:
    - monitoring
    - bot

  bot:
    build:
      context: ./bot
    env_file:
    - ./bot.env
    volumes:
    - ./bot/alerts_tmpl.yml:/app/alerts_tmpl.yml
    - prometheus_rules:/prometheus_rules
    ports:
    - "8080:8080"
    networks:
    - bot
    - postgres
    - monitoring

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: adm
      POSTGRES_PASSWORD: adm
      PGDATA: /data/postgres
    volumes:
    - ./bot/db_scheme.sql:/docker-entrypoint-initdb.d/db.sql
    - postgres:/data/postgres
    ports:
    - "5432:5432"
    networks:
    - postgres

  redis:
    image: redis:latest
    command: ["redis-server"]
    ports:
    - "6379:6379"
    networks:
    - bot
    - monitoring

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: adm
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
    - "5050:80"
    networks:
    - postgres

  validators_cache:
    build:
      context: ./validators_cache
    depends_on:
    - prometheus
    networks:
    - redis
    - monitoring
    restart: unless-stopped

  github_release_exporter:
    build:
      context: ./exporters/github_release
    environment:
    - "LISTEN=0.0.0.0"
    - "PORT=9150"
    networks:
    - exporters

volumes:
    postgres: {}
    prometheus_data: {}
    prometheus_rules: {}
    grafana_data: {}
    alertmanager-data: {}
    pgadmin: {}

networks:
  bot:
  exporters: 
  monitoring:
  postgres:
  redis:
