version: '3.4'

services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - exporters
      - monitoring
      - bot

  grafana:
    image: grafana/grafana:latest
    user: "472"
    depends_on:
    - prometheus
    ports:
    - 3000:3000
    volumes:
    - grafana_data:/var/lib/grafana
    - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
    - 'GF_SECURITY_ADMIN_PASSWORD=admin'
    - 'GF_USERS_ALLOW_SIGN_UP=false'
    networks:
    - monitoring

  alertmanager:
    image: prom/alertmanager:latest
    restart: unless-stopped
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager:/config
      - alertmanager-data:/data
    command: --config.file=/config/alertmanager.yml 
    networks:
    - monitoring
    - bot

  bot:
    build:
      context: ./bot
    environment:
    - "db_host=postgres"
    - "db_port=5432"
    - "prometheus_rules_url=http://prometheus:9090/api/v1/rules"
    - "prometheus_alert_groups=maas-rules"
    env_file:
    - ./bot.env
    ports:
    - "8080:8080"
    networks:
    - bot
    - postgres
    - monitoring

  postgres:
    container_name: postgres
    image: postgres:13
    environment:
      POSTGRES_USER: adm
      POSTGRES_PASSWORD: adm
      PGDATA: /data/postgres
    volumes:
    - ./bot/db_scheme.sql:/docker-entrypoint-initdb.d/db.sql
    - postgres:/data/postgres
    ports:
    - "5432:5432"
    networks:
    - postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: adm
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
    - "5050:80"
    networks:
    - postgres

volumes:
    postgres: {}
    prometheus_data: {}
    grafana_data: {}
    alertmanager-data: {}
    pgadmin: {}

networks:
  bot:
  exporters: 
  monitoring:
  postgres:
